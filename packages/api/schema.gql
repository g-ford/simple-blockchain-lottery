# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""
A Draw is a single lottery instance, represented by Draw Number conducted on a certain date
"""
type Draw {
  id: String!
  start: DateTime!
  end: DateTime!
  status: String!
  results: Result
}

"""
For creating or updating draws. See Draw for more info.

  When updating a Draw you cannot directly set the `status`
"""
input DrawInput {
  id: String!
  start: DateTime!
  end: DateTime!
}

type Entry {
  id: String!
  drawNumber: String!
  numbers: [Float!]!
}

input EntryInput {
  drawNumber: String!
  numbers: [Float!]!
}

type Mutation {
  updateDraw(draw: DrawInput!): Draw!

  """Progresses the Draw through the workflow"""
  nextStatus(currentStatus: String!, drawNumber: String!): Draw!
  createEntry(entry: EntryInput!): Entry!
}

type Query {
  getDraw(id: String!): Draw
  allDraws: [Draw!]!
  getEntries(drawNumber: String!): [Entry!]
}

type Result {
  id: String!
  drawNumber: String!
  numbers: [Float!]!
  date: DateTime!
}
