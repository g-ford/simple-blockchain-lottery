# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""
A Draw is a single lottery instance, represented by Draw Number conducted on a certain date
"""
type Draw {
  drawNumber: String!
  startDate: DateTime!
  endDate: DateTime!

  """Use `nextStatus` to move the draw through the workflow"""
  status: String!
}

"""
For creating or updating draws. See Draw for more info.

  When updating a Draw you cannot directly set the `status`
"""
input DrawInput {
  drawNumber: String!
  startDate: DateTime!
  endDate: DateTime!
}

type Entry {
  draw: Draw!
  numbers: [Float!]!
}

type Mutation {
  updateDraw(draw: DrawInput!): Draw!

  """Progresses the Draw through the workflow"""
  nextStatus(drawNumber: String!): Draw!
}

type Query {
  getDraw(drawNumber: String!): Draw
}
